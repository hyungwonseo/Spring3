@PostMapping("/upload")
    public ResponseEntity<?> upload(@ModelAttribute UploadAlbumDTO dto) {
        System.out.println("제목: " + dto.getTitle());
        System.out.println("이미지: " + dto.getImage());
        String uploadDir = "./var/upload";

        // 폴더가 없으면 생성
        File dir = new File(uploadDir);
        if (!dir.exists()) {
            dir.mkdirs();
        }

        List<String> savedFileNames = new ArrayList<>();
        MultipartFile file = dto.getImage();
        String originalFilename = file.getOriginalFilename();
        String ext = "";
        if (originalFilename != null && originalFilename.contains(".")) {
            ext = originalFilename.substring(originalFilename.lastIndexOf("."));
        }

        // UUID로 새 파일 이름 생성
        String newFileName = UUID.randomUUID().toString() + ext;
        Path savePath = Paths.get(uploadDir, newFileName);

        try {
            Files.copy(file.getInputStream(), savePath, StandardCopyOption.REPLACE_EXISTING);
            System.out.println("저장된 파일명: " + newFileName);
            return ResponseEntity.ok("업로드 성공 (" + newFileName + ")");
        } catch (IOException e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body("파일 저장 중 오류 발생: " + e.getMessage());
        }
    }